{"ast":null,"code":"import _slicedToArray from\"D:/gitProjects/smart-brain/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import react,{useState}from'react';import'../ImageLinkForm.css';import Modal from'react-modal';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var customStyles={content:{top:'50%',left:'50%',right:'auto',bottom:'auto',marginRight:'-50%',transform:'translate(-50%, -50%)'}};// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\nModal.setAppElement(document.getElementById('root'));var ModifyPassword=function ModifyPassword(_ref){var user=_ref.user;var subtitle;var email=user.email;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),modalPassword=_useState2[0],setModalPassword=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),newPassword=_useState4[0],setNewPassword=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),oldPassword=_useState6[0],setOldPassword=_useState6[1];var openModalPassword=function openModalPassword(){setModalPassword(true);};var afterOpenModal=function afterOpenModal(){// references are now sync'd and can be accessed.\nsubtitle.style.color='#f00';};var closeModalPassword=function closeModalPassword(){setModalPassword(false);};var onClickFetchPassword=function onClickFetchPassword(){fetch(\"https://ancient-forest-08678.herokuapp.com/modify/password\",{//fetch will automatically use GET method, but we want PUT\nmethod:'put',headers:{'Content-Type':'application/json'},body:JSON.stringify({newPassword:newPassword,oldPassword:oldPassword,email:email})}).then(function(response){return response.json();}).then(function(modifiedElement){window.location.reload(true);}).catch(function(error){return console.log(error);});};return/*#__PURE__*/_jsxs(\"div\",{className:\"fl w-100 w-50-ns pa2\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"w-100 grow f4 link ph3 pv2 dib white bg-dark-blue\",onClick:openModalPassword,children:\"Change Password\"}),/*#__PURE__*/_jsxs(Modal,{isOpen:modalPassword,onAfterOpen:afterOpenModal,onRequestClose:closeModalPassword,style:customStyles,contentLabel:\"Password\",children:[/*#__PURE__*/_jsx(\"h2\",{ref:function ref(_subtitle){return subtitle=_subtitle;}}),/*#__PURE__*/_jsx(\"main\",{className:\"pa4 black-80\",children:/*#__PURE__*/_jsx(\"form\",{className:\"measure center\",children:/*#__PURE__*/_jsxs(\"fieldset\",{id:\"Password\",className:\"ba b--transparent ph0 mh0\",children:[/*#__PURE__*/_jsx(\"legend\",{className:\"f4 fw6 ph0 mh0\",children:\"Change Password\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt3\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"db fw6 lh-copy f6\",htmlFor:\"email-address\",children:\"New Password\"}),/*#__PURE__*/_jsx(\"input\",{className:\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\",type:\"password\",name:\"password-new\",id:\"password\",onChange:function onChange(password){return setNewPassword(password.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mv3\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"db fw6 lh-copy f6\",htmlFor:\"password\",children:\"Old Password to confirm\"}),/*#__PURE__*/_jsx(\"input\",{className:\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\",type:\"password\",name:\"password-old\",id:\"password-old\",onChange:function onChange(password){return setOldPassword(password.target.value);}})]}),/*#__PURE__*/_jsx(\"div\",{className:\"\",children:/*#__PURE__*/_jsx(\"input\",{className:\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\",type:\"button\",value:\"Submit\",onClick:function onClick(){return onClickFetchPassword();}})})]})})})]})]});};export default ModifyPassword;","map":{"version":3,"sources":["D:/gitProjects/smart-brain/src/components/Modify/ModifyPassword.js"],"names":["react","useState","Modal","customStyles","content","top","left","right","bottom","marginRight","transform","setAppElement","document","getElementById","ModifyPassword","user","subtitle","email","modalPassword","setModalPassword","newPassword","setNewPassword","oldPassword","setOldPassword","openModalPassword","afterOpenModal","style","color","closeModalPassword","onClickFetchPassword","fetch","method","headers","body","JSON","stringify","then","response","json","modifiedElement","window","location","reload","catch","error","console","log","_subtitle","password","target","value"],"mappings":"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","sourcesContent":["import react, {useState} from 'react';\r\nimport '../ImageLinkForm.css';\r\nimport Modal from 'react-modal' ;\r\n\r\nconst customStyles = {\r\n  content : {\r\n    top                   : '50%',\r\n    left                  : '50%',\r\n    right                 : 'auto',\r\n    bottom                : 'auto',\r\n    marginRight           : '-50%',\r\n    transform             : 'translate(-50%, -50%)'\r\n  }\r\n};\r\n \r\n// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\r\nModal.setAppElement(document.getElementById('root'));\r\n\r\nconst ModifyPassword = ({user}) =>{\r\n\tvar subtitle;\r\n\tconst email = user.email;\r\n\tconst [modalPassword, setModalPassword] = useState(false);\r\n\tconst [newPassword, setNewPassword] = useState('');\r\n\tconst [oldPassword, setOldPassword] = useState('');\r\n\r\n\tconst openModalPassword = () =>{\r\n\t\tsetModalPassword(true);\r\n\t}\r\n\tconst afterOpenModal = () => {\r\n\t    // references are now sync'd and can be accessed.\r\n\t    subtitle.style.color = '#f00';\r\n  \t}\r\n  \t\r\n  \tconst closeModalPassword = () =>{\r\n  \t\tsetModalPassword(false);\r\n  \t}\r\n\r\n  \tconst onClickFetchPassword = () =>{\r\n  \t\tfetch (`https://ancient-forest-08678.herokuapp.com/modify/password`, {//fetch will automatically use GET method, but we want PUT\r\n\t\t\t\tmethod : 'put',\r\n\t\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tnewPassword: newPassword,\r\n\t\t\t\t\toldPassword: oldPassword,\r\n\t\t\t\t\temail: email\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t        .then(response => response.json())\r\n\t        .then(modifiedElement=> {\r\n\t        \twindow.location.reload(true);\r\n\t        })\r\n\t        .catch(error =>console.log(error));\r\n  \t}\r\n\r\n  \treturn (\r\n  \t\t\t<div className=\"fl w-100 w-50-ns pa2\">\r\n\t\t\t\t\t\t    <button className= 'w-100 grow f4 link ph3 pv2 dib white bg-dark-blue'\r\n\t\t\t\t\t\t    onClick={openModalPassword}>\r\n\t\t\t\t\t\t    \tChange Password\r\n\t\t\t\t\t\t    </button>\r\n\t\t\t\t\t\t    <Modal\r\n\t\t\t\t\t\t\t\t\t\t\tisOpen={modalPassword}\r\n\t\t\t\t\t\t\t\t\t\t\tonAfterOpen={afterOpenModal}\t\t\t          \r\n\t\t\t\t\t\t\t\t\t\t\tonRequestClose={closeModalPassword}\t\t\t          \r\n\t\t\t\t\t\t\t\t\t\t\tstyle={customStyles}\t\t          \r\n\t\t\t\t\t\t\t\t\t\t\tcontentLabel= 'Password'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h2 ref={_subtitle => (subtitle = _subtitle)}></h2>\r\n\t\t\t\t\t\t\t\t\t\t\t<main className=\"pa4 black-80\">\r\n\t\t\t\t\t\t\t\t\t\t\t  <form className=\"measure center\">\r\n\t\t\t\t\t\t\t\t\t\t\t    <fieldset id=\"Password\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t\t\t\t\t\t\t\t\t      <legend className=\"f4 fw6 ph0 mh0\">Change Password</legend>\r\n\t\t\t\t\t\t\t\t\t\t\t      <div className=\"mt3\">\r\n\t\t\t\t\t\t\t\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">New Password</label>\r\n\t\t\t\t\t\t\t\t\t\t\t        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t\t\t\t\t\t\t\t        type=\"password\" \r\n\t\t\t\t\t\t\t\t\t\t\t        name=\"password-new\"  \r\n\t\t\t\t\t\t\t\t\t\t\t        id=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\t        onChange = {password => setNewPassword(password.target.value)}/>\r\n\t\t\t\t\t\t\t\t\t\t\t      </div>\r\n\t\t\t\t\t\t\t\t\t\t\t      <div className=\"mv3\">\r\n\t\t\t\t\t\t\t\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Old Password to confirm</label>\r\n\t\t\t\t\t\t\t\t\t\t\t        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t\t\t\t\t\t\t\t        type=\"password\" \r\n\t\t\t\t\t\t\t\t\t\t\t        name=\"password-old\"  \r\n\t\t\t\t\t\t\t\t\t\t\t        id=\"password-old\"\r\n\t\t\t\t\t\t\t\t\t\t\t        onChange = {password => setOldPassword(password.target.value)}/>\r\n\t\t\t\t\t\t\t\t\t\t\t      </div>\r\n\t\t\t\t\t\t\t\t\t\t\t      <div className=\"\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t      <input className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t      type=\"button\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t      value=\"Submit\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t      onClick = {()=>onClickFetchPassword()}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t\t\t\t\t\t    </fieldset>\r\n\t\t\t\t\t\t\t\t\t\t\t    \r\n\t\t\t\t\t\t\t\t\t\t\t  </form>\r\n\t\t\t\t\t\t\t\t\t\t\t</main>\r\n\t\t\t\t\t\t\t\t\t\t </Modal>\r\n\r\n\t\t\t\t\t\t</div>\r\n  \t\t)\r\n}\r\n\r\nexport default ModifyPassword;"]},"metadata":{},"sourceType":"module"}