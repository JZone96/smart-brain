{"ast":null,"code":"var _jsxFileName = \"D:\\\\gitProjects\\\\facerecognitionbrain\\\\src\\\\App.js\";\nimport './App.css';\nimport react, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation.js';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: 'f9e837ab0386499e9583b19c25f83b74'\n});\n/*\nline_linked: {\n                    shadow: {\n                      enable: true,\n                      color: \"#3CA9D1\",\n                      blur: 5,\n                    }\n                  }\n\n*/\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 185\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      console.log(data);\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: widht - clarifaiFace.left_col * width,\n        //% * width\n        topRow: height - clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        return this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(e => console.log('error', e));\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        params: particlesOptions,\n        className: \"particles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onSubmit: this.onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        box: this.state.box,\n        imageUrl: this.state.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/gitProjects/facerecognitionbrain/src/App.js"],"names":["react","Component","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","Particles","Clarifai","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","constructor","calculateFaceLocation","data","console","log","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","widht","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","setState","onInputChange","event","input","target","onSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","e","render"],"mappings":"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","sourcesContent":["import './App.css';\nimport react, {Component} from 'react';\nimport Navigation from './components/Navigation/Navigation.js';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai'\n\nconst app = new Clarifai.App({\n  apiKey : 'f9e837ab0386499e9583b19c25f83b74'\n});\n/*\nline_linked: {\n                    shadow: {\n                      enable: true,\n                      color: \"#3CA9D1\",\n                      blur: 5,\n                    }\n                  }\n\n*/\nconst particlesOptions = {\nparticles: {                 \n  number: {\n    value: 30,\n    density:{\n      enable:true,\n      value_area:185,\n      }\n    }\n  }\n}                \n\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box:{\n      }\n    }\n  }\n\n  calculateFaceLocation = (data) =>{\n    console.log(data)\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return{\n      leftCol: widht - (clarifaiFace.left_col *width), //% * width\n      topRow: height - (clarifaiFace.top_row * height),\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height),\n    }\n  }\n  displayFaceBox = (box) =>{\n    console.log(box)\n    this.setState ({box: box});\n  }\n  onInputChange = (event) =>{\n    this.setState({input: event.target.value})\n  }\n\n  onSubmit = () =>{\n    this.setState ({imageUrl : this.state.input})\n    app.models.predict(Clarifai.FACE_DETECT_MODEL,this.state.input)\n    .then(response=>{\n      return this.displayFaceBox(this.calculateFaceLocation(response))\n    })\n    .catch(e=>console.log('error',e))\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        <Particles params={particlesOptions} className='particles'/>{/*z-index:-1 set a background*/}\n        <Navigation />     \n        <Logo /> \n        <Rank />\n        <ImageLinkForm onInputChange={this.onInputChange} onSubmit={this.onSubmit}/>\n        <FaceRecognition box = {this.state.box} imageUrl={this.state.imageUrl}/>\n      </div>\n    );\n  }  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}