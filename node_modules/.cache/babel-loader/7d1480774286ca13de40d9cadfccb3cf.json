{"ast":null,"code":"var _jsxFileName = \"D:\\\\gitProjects\\\\smart-brain\\\\src\\\\components\\\\Modify\\\\DeleteUser.js\";\nimport react, { useState } from 'react';\nimport '../ImageLinkForm.css';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n}; // Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\n\nModal.setAppElement(document.getElementById('root'));\n\nconst DeleteUser = ({\n  userId\n}) => {\n  const openModalDelete = () => {\n    setModalPassword(true);\n  };\n\n  const afterOpenModal = () => {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = '#f00';\n  };\n\n  const closeModalDelete = () => {\n    setModalPassword(false);\n  };\n\n  const onClickDeleteUser = () => {\n    fetch(`https://ancient-forest-08678.herokuapp.com/modify/delete`, {\n      //fetch will automatically use GET method, but we want PUT\n      method: 'delete',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({})\n    }).then(response => response.json()).then(modifiedElement => {\n      window.location.reload(true);\n    }).catch(error => console.log(error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fl w-100 w-50-ns pa2\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"w-100 grow f4 link ph3 pv2 dib white bg-dark-red\",\n      onClick: () => onClickDeleteUser(),\n      children: \"Delete User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalPassword,\n      onAfterOpen: afterOpenModal,\n      onRequestClose: closeModalPassword,\n      style: customStyles,\n      contentLabel: \"Password\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        ref: _subtitle => subtitle = _subtitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"pa4 black-80\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"measure center\",\n          children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            id: \"Password\",\n            className: \"ba b--transparent ph0 mh0\",\n            children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n              className: \"f4 fw6 ph0 mh0\",\n              children: \"Change Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"db fw6 lh-copy f6\",\n                htmlFor: \"email-address\",\n                children: \"New Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\",\n                type: \"password\",\n                name: \"password-new\",\n                id: \"password\",\n                onChange: password => setNewPassword(password.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 20\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mv3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"db fw6 lh-copy f6\",\n                htmlFor: \"password\",\n                children: \"Old Password to confirm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\",\n                type: \"password\",\n                name: \"password-old\",\n                id: \"password-old\",\n                onChange: password => setOldPassword(password.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 20\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\",\n                type: \"button\",\n                value: \"Submit\",\n                onClick: () => onClickFetchPassword()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }, this);\n};\n\n_c = DeleteUser;\nexport default DeleteUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteUser\");","map":{"version":3,"sources":["D:/gitProjects/smart-brain/src/components/Modify/DeleteUser.js"],"names":["react","useState","Modal","customStyles","content","top","left","right","bottom","marginRight","transform","setAppElement","document","getElementById","DeleteUser","userId","openModalDelete","setModalPassword","afterOpenModal","subtitle","style","color","closeModalDelete","onClickDeleteUser","fetch","method","headers","body","JSON","stringify","then","response","json","modifiedElement","window","location","reload","catch","error","console","log","modalPassword","closeModalPassword","_subtitle","password","setNewPassword","target","value","setOldPassword","onClickFetchPassword"],"mappings":"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","sourcesContent":["import react, {useState} from 'react';\r\nimport '../ImageLinkForm.css';\r\nimport Modal from 'react-modal' ;\r\n\r\nconst customStyles = {\r\n  content : {\r\n    top                   : '50%',\r\n    left                  : '50%',\r\n    right                 : 'auto',\r\n    bottom                : 'auto',\r\n    marginRight           : '-50%',\r\n    transform             : 'translate(-50%, -50%)'\r\n  }\r\n};\r\n \r\n// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\r\nModal.setAppElement(document.getElementById('root'));\r\n\r\nconst DeleteUser = ({userId}) =>{\r\n\tconst openModalDelete = () =>{\r\n\t\tsetModalPassword(true);\r\n\t}\r\n\tconst afterOpenModal = () => {\r\n\t    // references are now sync'd and can be accessed.\r\n\t    subtitle.style.color = '#f00';\r\n  \t}\r\n  \t\r\n  \tconst closeModalDelete = () =>{\r\n  \t\tsetModalPassword(false);\r\n  \t}\r\n\r\n\tconst onClickDeleteUser = () =>{\r\n\t\tfetch (`https://ancient-forest-08678.herokuapp.com/modify/delete`, {//fetch will automatically use GET method, but we want PUT\r\n\t\t\t\tmethod : 'delete',\r\n\t\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t        .then(response => response.json())\r\n\t        .then(modifiedElement=> {\r\n\t        \twindow.location.reload(true);\r\n\t        })\r\n\t        .catch(error =>console.log(error));\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"fl w-100 w-50-ns pa2\">\r\n\t\t\t<button className= 'w-100 grow f4 link ph3 pv2 dib white bg-dark-red'\r\n\t\t\t\t\tonClick={() =>onClickDeleteUser()}>\r\n\t\t\t\t\tDelete User\r\n\t\t\t</button>\r\n\t\t\t<Modal\r\n\t\t\t\t\t\t\t\t\t\t\tisOpen={modalPassword}\r\n\t\t\t\t\t\t\t\t\t\t\tonAfterOpen={afterOpenModal}\t\t\t          \r\n\t\t\t\t\t\t\t\t\t\t\tonRequestClose={closeModalPassword}\t\t\t          \r\n\t\t\t\t\t\t\t\t\t\t\tstyle={customStyles}\t\t          \r\n\t\t\t\t\t\t\t\t\t\t\tcontentLabel= 'Password'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h2 ref={_subtitle => (subtitle = _subtitle)}></h2>\r\n\t\t\t\t\t\t\t\t\t\t\t<main className=\"pa4 black-80\">\r\n\t\t\t\t\t\t\t\t\t\t\t  <form className=\"measure center\">\r\n\t\t\t\t\t\t\t\t\t\t\t    <fieldset id=\"Password\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t\t\t\t\t\t\t\t\t      <legend className=\"f4 fw6 ph0 mh0\">Change Password</legend>\r\n\t\t\t\t\t\t\t\t\t\t\t      <div className=\"mt3\">\r\n\t\t\t\t\t\t\t\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">New Password</label>\r\n\t\t\t\t\t\t\t\t\t\t\t        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t\t\t\t\t\t\t\t        type=\"password\" \r\n\t\t\t\t\t\t\t\t\t\t\t        name=\"password-new\"  \r\n\t\t\t\t\t\t\t\t\t\t\t        id=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\t        onChange = {password => setNewPassword(password.target.value)}/>\r\n\t\t\t\t\t\t\t\t\t\t\t      </div>\r\n\t\t\t\t\t\t\t\t\t\t\t      <div className=\"mv3\">\r\n\t\t\t\t\t\t\t\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Old Password to confirm</label>\r\n\t\t\t\t\t\t\t\t\t\t\t        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t\t\t\t\t\t\t\t        type=\"password\" \r\n\t\t\t\t\t\t\t\t\t\t\t        name=\"password-old\"  \r\n\t\t\t\t\t\t\t\t\t\t\t        id=\"password-old\"\r\n\t\t\t\t\t\t\t\t\t\t\t        onChange = {password => setOldPassword(password.target.value)}/>\r\n\t\t\t\t\t\t\t\t\t\t\t      </div>\r\n\t\t\t\t\t\t\t\t\t\t\t      <div className=\"\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t      <input className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t      type=\"button\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t      value=\"Submit\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t      onClick = {()=>onClickFetchPassword()}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t\t\t\t\t\t    </fieldset>\r\n\t\t\t\t\t\t\t\t\t\t\t    \r\n\t\t\t\t\t\t\t\t\t\t\t  </form>\r\n\t\t\t\t\t\t\t\t\t\t\t</main>\r\n\t\t\t\t\t\t\t\t\t\t </Modal>\r\n\r\n\t\t</div>\r\n\t\t)\r\n\r\n}\r\n\r\nexport default DeleteUser;"]},"metadata":{},"sourceType":"module"}