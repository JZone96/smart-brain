{"ast":null,"code":"import _objectSpread from\"D:/gitProjects/smart-brain/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/gitProjects/smart-brain/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'./App.css';import React,{useState}from'react';import Navigation from'./components/Navigation/Navigation.js';import Logo from'./components/Logo/Logo';import ImageLinkForm from'./components/ImageLinkForm';import Rank from'./components/Rank/Rank';import FaceRecognition from'./components/FaceRecognition/FaceRecognition';import Signin from'./components/Signin/Signin';import Register from'./components/Register/Register';import ModifyUser from'./components/Modify/Modify';import Particles from'react-particles-js';/*\n  Particles API used for the background\n*/import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var particlesOptions={particles:{number:{value:30,density:{enable:true,value_area:185}}}};var App=function App(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoaded=_useState2[0],setIsLoaded=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),input=_useState4[0],setInput=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),imageUrl=_useState6[0],setImageUrl=_useState6[1];var _useState7=useState([{}]),_useState8=_slicedToArray(_useState7,2),box=_useState8[0],setBox=_useState8[1];var _useState9=useState('loading'),_useState10=_slicedToArray(_useState9,2),route=_useState10[0],setRoute=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),isSignedIn=_useState12[0],setIsSignedIn=_useState12[1];var _useState13=useState({id:'',name:'',email:'',password:'',entries:'',joined:''}),_useState14=_slicedToArray(_useState13,2),user=_useState14[0],setUser=_useState14[1];var _useState15=useState(\"\"),_useState16=_slicedToArray(_useState15,2),text=_useState16[0],setText=_useState16[1];var numberOfFaces;window.onload=function(){if(localStorage.userId&&!isLoaded){setRoute('loading');fetch(\"https://ancient-forest-08678.herokuapp.com/profile/\".concat(localStorage.userId)).then(function(response){return response.json();}).then(function(user){setUser(_objectSpread(_objectSpread({},user),{},{email:user.email,entries:user.entries,id:user.id,joined:user.joined,name:user.name}));setIsLoaded(true);setIsSignedIn(true);setRoute('home');}).catch(function(err){return console.log('Broken Server :(');});}else{setRoute('signin');}};var _setInitialState=function setInitialState(){setInput('');setImageUrl('');setBox([{}]);setRoute('signin');setIsSignedIn(false);setUser({id:'',name:'',email:'',password:'',entries:'',joined:''});};/*\n  Function that calculates face location based on coordinates given by CLARIFAI API\n  Returns an array with all the coordinates\n*/var calculateFaceLocation=function calculateFaceLocation(data){if(data.outputs[0].data.regions){numberOfFaces=data.outputs[0].data.regions.length;if(numberOfFaces===1){setText(\"I've detected \".concat(numberOfFaces,\" face\"));}else{setText(\"I've detected \".concat(numberOfFaces,\" faces\"));}var image=document.getElementById('inputimage');var width=Number(image.width);var height=Number(image.height);var faceCoordinates=data.outputs[0].data.regions;var facesDetected=[];faceCoordinates.forEach(function(face){var clarifaiFace=face.region_info.bounding_box;var coordinates={leftCol:clarifaiFace.left_col*width,topRow:clarifaiFace.top_row*height,rightCol:width-clarifaiFace.right_col*width,bottomRow:height-clarifaiFace.bottom_row*height};facesDetected.push(coordinates);});return facesDetected;}else{setText(\"No faces detected :(\");return false;}};/*\n    when the user submits the image link, this function send a request to the server.\n    the server handles the CLARIFAI API call, to detect all the faces.\n    The server send a response with all the detected faces, and calculateFaceLocation does the rest.\n    this response brings us in another fetch to the backend, to update the entries\n  */var _onSubmit=function onSubmit(){if(!input){setText(\"No Link provided\");}else{setImageUrl(input.target.value);fetch(\"https://ancient-forest-08678.herokuapp.com/imageurl\",{method:'post',headers:{'Content-Type':'application/json'},body:JSON.stringify({input:input.target.value})}).then(function(response){return response.json();}).then(function(response){if(response==='unable to call API'){setText(\"Image Not Found :(\");}else{fetch(\"https://ancient-forest-08678.herokuapp.com/image\",{method:'put',headers:{'Content-Type':'application/json'},body:JSON.stringify({id:user.id//send the id to the server. it will update that user's count\n})}).then(function(response){return response.json();}).then(function(count){setUser(_objectSpread(_objectSpread({},user),{},{entries:count}));}).catch(console.log);setBox(calculateFaceLocation(response));}}).catch(function(e){return console.log('error',e);});}};var section;if(route==='signin'){section=/*#__PURE__*/_jsx(Signin,{loadUser:function loadUser(user){return setUser(user);},onRouteChange:function onRouteChange(route){return setRoute(route);},isSignedIn:function isSignedIn(value){return setIsSignedIn(value);}});}else if(route==='register'){section=/*#__PURE__*/_jsx(Register,{loadUser:function loadUser(user){return setUser(user);},onRouteChange:function onRouteChange(route){return setRoute(route);},isSignedIn:function isSignedIn(value){return setIsSignedIn(value);}});}else if(route==='modify'){section=/*#__PURE__*/_jsxs(\"div\",{className:\"tc\",children:[/*#__PURE__*/_jsx(Logo,{}),/*#__PURE__*/_jsx(ModifyUser,{user:user})]});}else if(route==='loading'){return/*#__PURE__*/_jsx(Particles,{params:particlesOptions,className:\"particles\"});}else{section=/*#__PURE__*/_jsxs(\"div\",{className:\"tc\",children:[/*#__PURE__*/_jsx(Logo,{}),/*#__PURE__*/_jsx(Rank,{userName:user.name,entries:user.entries}),/*#__PURE__*/_jsx(ImageLinkForm,{onInputChange:function onInputChange(link){return setInput(link);},onSubmit:function onSubmit(){return _onSubmit();},text:text}),/*#__PURE__*/_jsx(FaceRecognition,{boxes:box,imageUrl:imageUrl})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Navigation,{isSignedIn:isSignedIn,onRouteChange:function onRouteChange(route){return setRoute(route);},setInitialState:function setInitialState(){return _setInitialState();},route:route}),/*#__PURE__*/_jsx(Particles,{params:particlesOptions,className:\"particles\"}),section]});};export default App;","map":{"version":3,"sources":["D:/gitProjects/smart-brain/src/App.js"],"names":["React","useState","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","Signin","Register","ModifyUser","Particles","particlesOptions","particles","number","value","density","enable","value_area","App","isLoaded","setIsLoaded","input","setInput","imageUrl","setImageUrl","box","setBox","route","setRoute","isSignedIn","setIsSignedIn","id","name","email","password","entries","joined","user","setUser","text","setText","numberOfFaces","window","onload","localStorage","userId","fetch","then","response","json","catch","err","console","log","setInitialState","calculateFaceLocation","data","outputs","regions","length","image","document","getElementById","width","Number","height","faceCoordinates","facesDetected","forEach","face","clarifaiFace","region_info","bounding_box","coordinates","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","push","onSubmit","target","method","headers","body","JSON","stringify","count","e","section","link"],"mappings":"iSAAA,MAAO,WAAP,CACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,UAAP,KAAuB,uCAAvB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,aAAP,KAA0B,4BAA1B,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,eAAP,KAA4B,8CAA5B,CACA,MAAOC,CAAAA,MAAP,KAAmB,4BAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,gCAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,4BAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,oBAAtB,CAGA;AACA;AACA,E,wFACA,GAAMC,CAAAA,gBAAgB,CAAG,CACzBC,SAAS,CAAE,CACTC,MAAM,CAAE,CACNC,KAAK,CAAE,EADD,CAENC,OAAO,CAAC,CACNC,MAAM,CAAC,IADD,CAENC,UAAU,CAAC,GAFL,CAFF,CADC,CADc,CAAzB,CAYA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,eACgBjB,QAAQ,CAAC,KAAD,CADxB,wCACTkB,QADS,eACCC,WADD,8BAEUnB,QAAQ,CAAC,EAAD,CAFlB,yCAEToB,KAFS,eAEFC,QAFE,8BAGgBrB,QAAQ,CAAC,EAAD,CAHxB,yCAGTsB,QAHS,eAGCC,WAHD,8BAIMvB,QAAQ,CAAC,CAAC,EAAD,CAAD,CAJd,yCAITwB,GAJS,eAIJC,MAJI,8BAKUzB,QAAQ,CAAC,SAAD,CALlB,0CAKT0B,KALS,gBAKFC,QALE,gCAMoB3B,QAAQ,CAAC,KAAD,CAN5B,2CAMT4B,UANS,gBAMGC,aANH,gCAOQ7B,QAAQ,CAAC,CACC8B,EAAE,CAAE,EADL,CAECC,IAAI,CAAE,EAFP,CAGCC,KAAK,CAAE,EAHR,CAICC,QAAQ,CAAE,EAJX,CAKCC,OAAO,CAAE,EALV,CAMCC,MAAM,CAAE,EANT,CAAD,CAPhB,2CAOTC,IAPS,gBAOHC,OAPG,gCAeQrC,QAAQ,CAAC,EAAD,CAfhB,2CAeTsC,IAfS,gBAeHC,OAfG,gBAgBhB,GAAIC,CAAAA,aAAJ,CACFC,MAAM,CAACC,MAAP,CAAgB,UAAK,CACf,GAAIC,YAAY,CAACC,MAAb,EAAuB,CAAC1B,QAA5B,CAAqC,CACnCS,QAAQ,CAAC,SAAD,CAAR,CACAkB,KAAK,8DAAwDF,YAAY,CAACC,MAArE,EAAL,CACCE,IADD,CACM,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADd,EAECF,IAFD,CAEM,SAAAV,IAAI,CAAG,CACXC,OAAO,gCACFD,IADE,MAELJ,KAAK,CAAEI,IAAI,CAACJ,KAFP,CAGLE,OAAO,CAAEE,IAAI,CAACF,OAHT,CAILJ,EAAE,CAAEM,IAAI,CAACN,EAJJ,CAKLK,MAAM,CAAEC,IAAI,CAACD,MALR,CAMLJ,IAAI,CAAEK,IAAI,CAACL,IANN,GAAP,CAQAZ,WAAW,CAAC,IAAD,CAAX,CACAU,aAAa,CAAC,IAAD,CAAb,CACAF,QAAQ,CAAC,MAAD,CAAR,CACD,CAdD,EAcGsB,KAdH,CAcS,SAAAC,GAAG,QAAIC,CAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,CAAJ,EAdZ,EAeD,CAjBD,IAiBK,CACDzB,QAAQ,CAAC,QAAD,CAAR,CACH,CACN,CArBD,CAuBE,GAAM0B,CAAAA,gBAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAK,CAC7BhC,QAAQ,CAAC,EAAD,CAAR,CACAE,WAAW,CAAC,EAAD,CAAX,CACAE,MAAM,CAAC,CAAC,EAAD,CAAD,CAAN,CACAE,QAAQ,CAAC,QAAD,CAAR,CACAE,aAAa,CAAC,KAAD,CAAb,CACAQ,OAAO,CAAC,CACEP,EAAE,CAAE,EADN,CAEEC,IAAI,CAAE,EAFR,CAGEC,KAAK,CAAE,EAHT,CAIEC,QAAQ,CAAE,EAJZ,CAKEC,OAAO,CAAE,EALX,CAMEC,MAAM,CAAE,EANV,CAAD,CAAP,CAQD,CAdC,CAeF;AACA;AACA;AACA,EACE,GAAMmB,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,IAAD,CAAS,CACrC,GAAIA,IAAI,CAACC,OAAL,CAAa,CAAb,EAAgBD,IAAhB,CAAqBE,OAAzB,CAAiC,CAC/BjB,aAAa,CAAGe,IAAI,CAACC,OAAL,CAAa,CAAb,EAAgBD,IAAhB,CAAqBE,OAArB,CAA6BC,MAA7C,CACA,GAAIlB,aAAa,GAAG,CAApB,CAAsB,CAClBD,OAAO,yBAAkBC,aAAlB,UAAP,CACH,CAFD,IAEK,CACDD,OAAO,yBAAkBC,aAAlB,WAAP,CACH,CAED,GAAMmB,CAAAA,KAAK,CAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAd,CACA,GAAMC,CAAAA,KAAK,CAAGC,MAAM,CAACJ,KAAK,CAACG,KAAP,CAApB,CACA,GAAME,CAAAA,MAAM,CAAGD,MAAM,CAACJ,KAAK,CAACK,MAAP,CAArB,CACA,GAAMC,CAAAA,eAAe,CAAGV,IAAI,CAACC,OAAL,CAAa,CAAb,EAAgBD,IAAhB,CAAqBE,OAA7C,CACA,GAAIS,CAAAA,aAAa,CAAG,EAApB,CAEAD,eAAe,CAACE,OAAhB,CAAwB,SAAAC,IAAI,CAAE,CAC5B,GAAMC,CAAAA,YAAY,CAAGD,IAAI,CAACE,WAAL,CAAiBC,YAAtC,CACA,GAAMC,CAAAA,WAAW,CAAG,CAClBC,OAAO,CAAGJ,YAAY,CAACK,QAAd,CAA0BZ,KADjB,CAElBa,MAAM,CAAGN,YAAY,CAACO,OAAd,CAAyBZ,MAFf,CAGlBa,QAAQ,CAAEf,KAAK,CAAIO,YAAY,CAACS,SAAb,CAAyBhB,KAH1B,CAIlBiB,SAAS,CAAEf,MAAM,CAAIK,YAAY,CAACW,UAAb,CAA0BhB,MAJ7B,CAApB,CAMAE,aAAa,CAACe,IAAd,CAAmBT,WAAnB,EACD,CATD,EAUA,MAAON,CAAAA,aAAP,CACD,CAzBD,IAyBK,CACH3B,OAAO,wBAAP,CACA,MAAO,MAAP,CACD,CACF,CA9BD,CAgCA;AACF;AACA;AACA;AACA;AACA,IACE,GAAM2C,CAAAA,SAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAK,CAEpB,GAAI,CAAC9D,KAAL,CAAW,CACTmB,OAAO,CAAC,kBAAD,CAAP,CAED,CAHD,IAGK,CACHhB,WAAW,CAACH,KAAK,CAAC+D,MAAN,CAAatE,KAAd,CAAX,CACAgC,KAAK,CAAE,qDAAF,CAAyD,CACtDuC,MAAM,CAAG,MAD6C,CAEtDC,OAAO,CAAE,CAAC,eAAgB,kBAAjB,CAF6C,CAGtDC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnBpE,KAAK,CAAEA,KAAK,CAAC+D,MAAN,CAAatE,KADD,CAAf,CAHgD,CAAzD,CAAL,CAOGiC,IAPH,CAOS,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EAPjB,EAQGF,IARH,CAQQ,SAAAC,QAAQ,CAAE,CACZ,GAAIA,QAAQ,GAAK,oBAAjB,CAAsC,CAClCR,OAAO,CAAC,oBAAD,CAAP,CACH,CAFD,IAEK,CACHM,KAAK,CAAE,kDAAF,CAAsD,CACzDuC,MAAM,CAAG,KADgD,CAEzDC,OAAO,CAAE,CAAC,eAAgB,kBAAjB,CAFgD,CAGzDC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnB1D,EAAE,CAAEM,IAAI,CAACN,EAAE;AADQ,CAAf,CAHmD,CAAtD,CAAL,CAOGgB,IAPH,CAOQ,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EAPhB,EAQGF,IARH,CAQQ,SAAA2C,KAAK,CAAG,CACVpD,OAAO,gCAAKD,IAAL,MAAWF,OAAO,CAAEuD,KAApB,GAAP,CACH,CAVH,EAUKxC,KAVL,CAUWE,OAAO,CAACC,GAVnB,EAYE3B,MAAM,CAAC6B,qBAAqB,CAACP,QAAD,CAAtB,CAAN,CAEH,CACF,CA3BL,EA2BOE,KA3BP,CA2Ba,SAAAyC,CAAC,QAAEvC,CAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAoBsC,CAApB,CAAF,EA3Bd,EA4BD,CAEF,CArCD,CAuCE,GAAIC,CAAAA,OAAJ,CAEA,GAAIjE,KAAK,GAAK,QAAd,CAAwB,CAClBiE,OAAO,cAAI,KAAC,MAAD,EAAQ,QAAQ,CAAE,kBAACvD,IAAD,QAASC,CAAAA,OAAO,CAACD,IAAD,CAAhB,EAAlB,CAA0C,aAAa,CAAE,uBAACV,KAAD,QAAWC,CAAAA,QAAQ,CAACD,KAAD,CAAnB,EAAzD,CAAqF,UAAU,CAAI,oBAACb,KAAD,QAAUgB,CAAAA,aAAa,CAAChB,KAAD,CAAvB,EAAnG,EAAX,CAEH,CAHH,IAGQ,IAAGa,KAAK,GAAK,UAAb,CAAyB,CAC3BiE,OAAO,cAAI,KAAC,QAAD,EAAU,QAAQ,CAAI,kBAACvD,IAAD,QAASC,CAAAA,OAAO,CAACD,IAAD,CAAhB,EAAtB,CAA8C,aAAa,CAAI,uBAACV,KAAD,QAAWC,CAAAA,QAAQ,CAACD,KAAD,CAAnB,EAA/D,CAA2F,UAAU,CAAI,oBAACb,KAAD,QAAUgB,CAAAA,aAAa,CAAChB,KAAD,CAAvB,EAAzG,EAAX,CACH,CAFK,IAEA,IAAIa,KAAK,GAAK,QAAd,CAAuB,CACzBiE,OAAO,cACL,aAAK,SAAS,CAAG,IAAjB,wBACE,KAAC,IAAD,IADF,cAEE,KAAC,UAAD,EAAY,IAAI,CAAIvD,IAApB,EAFF,GADF,CAMH,CAPK,IAOA,IAAIV,KAAK,GAAK,SAAd,CAAyB,CAE7B,mBACI,KAAC,SAAD,EAAW,MAAM,CAAEhB,gBAAnB,CAAqC,SAAS,CAAC,WAA/C,EADJ,CAGD,CALK,IAKD,CACHiF,OAAO,cACL,aAAK,SAAS,CAAC,IAAf,wBACE,KAAC,IAAD,IADF,cAEE,KAAC,IAAD,EAAM,QAAQ,CAAIvD,IAAI,CAACL,IAAvB,CAA6B,OAAO,CAAIK,IAAI,CAACF,OAA7C,EAFF,cAGE,KAAC,aAAD,EAAe,aAAa,CAAE,uBAAC0D,IAAD,QAAUvE,CAAAA,QAAQ,CAACuE,IAAD,CAAlB,EAA9B,CAAwD,QAAQ,CAAE,0BAAIV,CAAAA,SAAQ,EAAZ,EAAlE,CAAkF,IAAI,CAAI5C,IAA1F,EAHF,cAIE,KAAC,eAAD,EAAiB,KAAK,CAAId,GAA1B,CAA+B,QAAQ,CAAEF,QAAzC,EAJF,GADF,CAQD,CAEH,mBACE,aAAK,SAAS,CAAC,KAAf,wBACE,KAAC,UAAD,EAAY,UAAU,CAAEM,UAAxB,CACY,aAAa,CAAI,uBAACF,KAAD,QAAWC,CAAAA,QAAQ,CAACD,KAAD,CAAnB,EAD7B,CAEY,eAAe,CAAI,iCAAI2B,CAAAA,gBAAe,EAAnB,EAF/B,CAGY,KAAK,CAAI3B,KAHrB,EADF,cAKE,KAAC,SAAD,EAAW,MAAM,CAAEhB,gBAAnB,CAAqC,SAAS,CAAC,WAA/C,EALF,CAMGiF,OANH,GADF,CAWH,CAjLD,CAmLA,cAAe1E,CAAAA,GAAf","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\nimport Navigation from './components/Navigation/Navigation.js';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport ModifyUser from './components/Modify/Modify';\nimport Particles from 'react-particles-js';\n\n\n/*\n  Particles API used for the background\n*/\nconst particlesOptions = {\nparticles: {                 \n  number: {\n    value: 30,\n    density:{\n      enable:true,\n      value_area:185,\n      }\n    }\n  }\n}               \n\nconst App = () => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [input, setInput] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [box, setBox] = useState([{}]);\n  const [route, setRoute] = useState('loading');\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [user, setUser] = useState({\n                                    id: '',\n                                    name: '',\n                                    email: '',\n                                    password: '',\n                                    entries: '',\n                                    joined: '',\n                                  });\n  const [text, setText] = useState(\"\");\n  let numberOfFaces;\nwindow.onload = () =>{\n      if (localStorage.userId && !isLoaded){\n        setRoute('loading');\n        fetch (`https://ancient-forest-08678.herokuapp.com/profile/${localStorage.userId}`)\n        .then(response => response.json())\n        .then(user=> {\n          setUser({\n            ...user, \n            email: user.email,\n            entries: user.entries,\n            id: user.id,\n            joined: user.joined,\n            name: user.name\n          });\n          setIsLoaded(true);\n          setIsSignedIn(true);\n          setRoute('home');\n        }).catch(err => console.log('Broken Server :(')) \n      }else{\n          setRoute('signin')\n      }\n}\n\n  const setInitialState = () =>{\n  setInput('');\n  setImageUrl('');\n  setBox([{}]);\n  setRoute('signin');\n  setIsSignedIn(false);\n  setUser({\n            id: '',\n            name: '',\n            email: '',\n            password: '',\n            entries: '',\n            joined: '',\n          });\n}\n/*\n  Function that calculates face location based on coordinates given by CLARIFAI API\n  Returns an array with all the coordinates\n*/\n  const calculateFaceLocation = (data) =>{\n    if (data.outputs[0].data.regions){\n      numberOfFaces = data.outputs[0].data.regions.length;\n      if (numberOfFaces===1){\n          setText(`I've detected ${numberOfFaces} face`);\n      }else{\n          setText(`I've detected ${numberOfFaces} faces`);\n      }\n\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      const faceCoordinates = data.outputs[0].data.regions;\n      let facesDetected = [];\n\n      faceCoordinates.forEach(face=>{\n        const clarifaiFace = face.region_info.bounding_box\n        const coordinates = {\n          leftCol: (clarifaiFace.left_col) * width,\n          topRow: (clarifaiFace.top_row) * height,\n          rightCol: width - (clarifaiFace.right_col * width),\n          bottomRow: height - (clarifaiFace.bottom_row * height)\n        }\n        facesDetected.push(coordinates);\n      })\n      return facesDetected;\n    }else{\n      setText(`No faces detected :(`)\n      return false;\n    }\n  }\n\n  /*\n    when the user submits the image link, this function send a request to the server.\n    the server handles the CLARIFAI API call, to detect all the faces.\n    The server send a response with all the detected faces, and calculateFaceLocation does the rest.\n    this response brings us in another fetch to the backend, to update the entries\n  */\n  const onSubmit = () =>{\n\n    if (!input){\n      setText(\"No Link provided\")\n      \n    }else{\n      setImageUrl(input.target.value);\n      fetch (\"https://ancient-forest-08678.herokuapp.com/imageurl\", {\n              method : 'post',\n              headers: {'Content-Type': 'application/json'},\n              body: JSON.stringify({\n                input: input.target.value\n                })\n              })\n        .then (response => response.json())\n        .then(response=>{\n            if (response === 'unable to call API'){\n                setText(\"Image Not Found :(\")\n            }else{\n              fetch (\"https://ancient-forest-08678.herokuapp.com/image\", {\n                method : 'put',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify({\n                  id: user.id//send the id to the server. it will update that user's count\n                  })\n                })\n                .then(response => response.json())\n                .then(count =>{\n                    setUser({...user, entries: count});\n                }).catch(console.log);\n\n                setBox(calculateFaceLocation(response));\n                \n            }\n          }).catch(e=>console.log('error',e))\n    }\n    \n  }\n\n    let section;\n\n    if (route === 'signin' ){\n          section = (<Signin loadUser={(user)=> setUser(user)} onRouteChange={(route) => setRoute(route)} isSignedIn = {(value)=> setIsSignedIn(value)}/>);\n\n      }else if(route === 'register' ){\n          section = (<Register loadUser = {(user)=> setUser(user)} onRouteChange = {(route) => setRoute(route)} isSignedIn = {(value)=> setIsSignedIn(value)}/>);\n      }else if (route === 'modify'){\n          section = (\n            <div className = 'tc'>\n              <Logo/>\n              <ModifyUser user = {user}/>\n            </div> \n            )\n      }else if (route === 'loading' ){\n        \n        return(\n            <Particles params={particlesOptions} className='particles'/>\n          );\n      }else{\n        section = (\n          <div className='tc'>     \n            <Logo/> \n            <Rank userName = {user.name} entries = {user.entries}/>\n            <ImageLinkForm onInputChange={(link) => setInput(link)} onSubmit={()=>onSubmit()} text = {text}/>\n            <FaceRecognition boxes = {box} imageUrl={imageUrl}/>\n          </div>\n        )\n      }\n\n    return (\n      <div className=\"App\">\n        <Navigation isSignedIn={isSignedIn} \n                    onRouteChange = {(route) => setRoute(route)} \n                    setInitialState = {()=>setInitialState()}\n                    route = {route}/>\n        <Particles params={particlesOptions} className='particles'/>\n        {section}\n      </div>\n    );\n    \n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}