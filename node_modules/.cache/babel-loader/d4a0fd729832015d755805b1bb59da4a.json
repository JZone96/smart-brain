{"ast":null,"code":"var _jsxFileName = \"D:\\\\gitProjects\\\\facerecognitionbrain\\\\src\\\\App.js\";\nimport './App.css';\nimport react, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation.js';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: 'f9e837ab0386499e9583b19c25f83b74'\n});\n/*\nline_linked: {\n                    shadow: {\n                      enable: true,\n                      color: \"#3CA9D1\",\n                      blur: 5,\n                    }\n                  }\n\n*/\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 185\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      console.log(data);\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      console.log(width, height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        //197\n        topRow: clarifaiFace.top_row * height,\n        //59\n        rightCol: width - clarifaiFace.right_col * width,\n        //195.7\n        bottomRow: height - clarifaiFace.bottom_row * height //274\n\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        return this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(e => console.log('error', e));\n    };\n\n    this.onRouteChange = route => {\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin' //where we are aon the page\n\n    };\n  }\n\n  render() {\n    if (this.state.route === 'signin') {\n      return /*#__PURE__*/_jsxDEV(Signin, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Particles, {\n          params: particlesOptions,\n          className: \"particles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n          onRouteChange: this.onRouteChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onSubmit: this.onSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: this.state.box,\n          imageUrl: this.state.imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/gitProjects/facerecognitionbrain/src/App.js"],"names":["react","Component","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","Signin","Particles","Clarifai","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","constructor","calculateFaceLocation","data","console","log","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","setState","onInputChange","event","input","target","onSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","e","onRouteChange","route","render"],"mappings":"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","sourcesContent":["import './App.css';\nimport react, {Component} from 'react';\nimport Navigation from './components/Navigation/Navigation.js';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai'\n\nconst app = new Clarifai.App({\n  apiKey : 'f9e837ab0386499e9583b19c25f83b74'\n});\n/*\nline_linked: {\n                    shadow: {\n                      enable: true,\n                      color: \"#3CA9D1\",\n                      blur: 5,\n                    }\n                  }\n\n*/\nconst particlesOptions = {\nparticles: {                 \n  number: {\n    value: 30,\n    density:{\n      enable:true,\n      value_area:185,\n      }\n    }\n  }\n}                \n\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box:{},\n      route: 'signin',//where we are aon the page\n    }\n  }\n\n  calculateFaceLocation = (data) =>{\n    console.log(data)\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    console.log(width, height);\n    return{\n      leftCol: (clarifaiFace.left_col) * width,//197\n      topRow: (clarifaiFace.top_row) * height,//59\n      rightCol: width - (clarifaiFace.right_col * width),//195.7\n      bottomRow: height - (clarifaiFace.bottom_row * height),//274\n    }\n  }\n  displayFaceBox = (box) =>{\n    console.log(box)\n    this.setState ({box: box});\n  }\n  onInputChange = (event) =>{\n    this.setState({input: event.target.value})\n  }\n\n  onSubmit = () =>{\n    this.setState ({imageUrl : this.state.input})\n    app.models.predict(Clarifai.FACE_DETECT_MODEL,this.state.input)\n    .then(response=>{\n      return this.displayFaceBox(this.calculateFaceLocation(response))\n    })\n    .catch(e=>console.log('error',e))\n  }\n  onRouteChange = (route) =>{\n    this.setState({route: route});\n  }\n  render(){\n    if (this.state.route === 'signin'){\n      return(\n          <Signin onRouteChange={this.onRouteChange}/>\n        );\n    }else{\n      return (\n        <div className=\"App\">\n          <Particles params={particlesOptions} className='particles'/>{/*z-index:-1 set a background*/}\n          <Navigation onRouteChange = {this.onRouteChange} />     \n          <Logo /> \n          <Rank />\n          <ImageLinkForm onInputChange={this.onInputChange} onSubmit={this.onSubmit}/>\n          <FaceRecognition box = {this.state.box} imageUrl={this.state.imageUrl}/>\n        </div>\n     );\n\n    }\n    \n  }  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}